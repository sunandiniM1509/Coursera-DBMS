Assignment.txt(Module 3)

1. List the city, state, and zip codes in the customer table.  Your result should not have duplicates. (Hint: The DISTINCT keyword eliminates duplicates.)

select distinct city, state, zip from Customer;


2. List the name, department, phone number, and email address of employees with a phone number beginning with “3-”.

select empname, department, phone, email from
Employee where phone Like "3-%";


3. List all columns of the resource table with a rate between $10 and $20. Sort the result by rate.


select * from ResoureTbl where rate between '10' and '20' order by rate;


4. List the event requests with a status of “Approved” or “Denied” and an authorized date in July 2018. Include the event number, authorization date, and status in the output. (Hint: see the examples in Module 4 for date constants in Oracle and MySQL.)

select eventno, dateauth, status from 
EventRequest where status in ('approved','denied') and 
dateauth between '2018-07-01' and '2018-07-31';


5. List the location number and name of locations that are part of the “Basketball arena”.  Your WHERE clause should not have a condition involving the facility number compared to a constant (“F101”). Instead, you should use a condition on the FacName column for the value of “Basketball arena”.


select locno, locname from 
Location where facno IN 
( select facno from 
  Facility where facname = 'Basketball arena'
);



6. For each event plan, list the plan number, count of the event plan lines, and sum of the number of resources assigned.  For example, plan number “P100” has 4 lines and 7 resources assigned.  You only need to consider event plans that have at least one line.


select planno, count(*)as line, sum(numberfld) from 
EventPlanLine group by planno having count(*) > 1;
------------------------------------------------------------------------------------------------------------------------------------------------
1. List the customer number, the name (first and last), and the balance of customers.


select custno, custfirstname, custlastname, custbal from customer;


2. List the customer number, the name (first and last), and the balance of customers who reside in Colorado (CustState is CO).


select custno, custfirstname, custlastname, custbal 
from customer where custstate = 'CO';


3. List all columns of the Product table for products costing more than $50.  Order the result by product manufacturer (ProdMfg) and product name.


select * from product where prodprice > 50 
order by prodmfg, prodname;


4. List the customer number, the name (first and last), the city, and the balance of customers who reside in Denver with a balance greater than $150 or who reside in Seattle with a balance greater than $300.


select custfirstname, custlastname, custcity, custbal from 
customer where (custcity = 'Denver' and custbal > 150) or 
(custcity = 'Seattle' and custbal > 300);


5. List the order number, order date, customer number, and customer name (first and last) of orders placed in January 2017 sent to Colorado recipients.


select ordno, orddate, customer.custno, customer.custfirstname, customer.custlastname 
from OrderTbl, customer where OrderTbl.custno = Customer.custno and
ordstate = 'CO' and orddate between '2017-01-01' and '2017-01-31';


6. List the average balance of customers by city. Include only customers residing in Washington state (WA).


select custcity,avg(custbal) from customer
where custstate = 'WA' group by custcity;


7. List the average balance and number of customers by city. Only include customers residing in Washington State (WA).  Eliminate cities in the result with less than two customers.


select custcity, avg(custbal), count(*) from customer
where custstate = 'WA' group by custcity 
having count(*) > 1;

8. List the customer number, the name, the phone number, and the city of customers.

select custno,custname,phone,city from Customer;


9. List the customer number, the name, the phone number, and the city of customers who reside in Colorado (State is CO).


select custno,custname,phone,city from Customer where state = "CO";


10. List all columns of the EventRequest table for events costing more than $4000.Order the result by the event date (DateHeld).


select * from EventRequest where estcost > 4000 order by dateheld;


11. List the event number, the event date (DateHeld), and the estimated audience number with approved status and audience greater than 9000 or with pending status and audience greater than 7000.


select eventno,datehelp,estaudience,status from
EventRequest where (status = "approved" and estaudience>9000) or
(status="pending" and estaudience > 7000);


12. List the event number, event date (DateHeld), customer number and customer name of events placed in January 2018 by customers from Boulder.


select eventno,dateheld,Customer.custno,custname from 
EventRequest,Customer where EventRequest.custno = Customer.custno and 
dateheld between '2018-01-01' and '2018-01-31' and city = 'Boulder';


13. List the average number of resources used (NumberFld) by plan number. Include only location number L100.

select planno, avg(numberfld) as AvgNumResources from 
EventPlanLine where locno = 'L100' group by planno;

14. List the average number of resources used (NumberFld) by plan number. Only include location number L100. Eliminate plans with less than two event lines containing location number L100.

select planno, avg(numberfld) as AvgNumResources,count(*) as NumEventLines 
from EventPlanLine where locno = 'L100' group by planno having count(*) >1;
________________________________________________________________________________________________________________________________________________
SELECT Statement Problems

1. For event requests, list the event number, event date (eventrequest.dateheld), and count of the event plans.  Only include event requests in the result if the event request has more than one related event plan with a work date in December 2018.


select EventRequest.eventno, datehelp, count(*) from 
EventRequest, EventPlan where EventRequest.eventno = EventPlan.eventno 
and workdate between '2018-12-01' and '2018-12-31' 
group by EventPlan.eventno,datehelp having count(*) > 1;


2. List the plan number, event number, work date, and activity of event plans meeting the following two conditions: (1) the work date is in December 2018 and (2) the event is held in the “Basketball arena”.  Your query must not use the facility number (“F101”) of the basketball arena in the WHERE clause. Instead, you should use a condition on the FacName column for the value of “Basketball arena”.


select planno, eventno, workdate, activity from 
EventPlan where(workdate between '2018-12-01' and '2018-12-31') 
and (eventno in (select eventno from EventRequest where facno in 
(select facno from Facility where facname = 'Basketball arena' )));


3. List the event number, event date, status, and estimated cost of events where there is an event plan managed by Mary Manager and the event is held in the basketball arena in the period October 1 to December 31, 2018.  Your query must not use the facility number (“F101”) of the basketball arena or the employee number (“E101”) of “Mary Manager” in the WHERE clause. Thus, the WHERE clause should not have conditions involving the facility number or employee number compared to constant values.


select EventRequest.eventno, dateheld, status, estcost from
EventRequest,EventPlan,Employee,Facility where 
EventRequest.eventno = EventPlan.eventno and EventPlan.empno = Employee.empno and
EventRequest.facno = Facility.facno and dateheld between '2018-10-01' and '2018-12-31' and
empname = 'Mary Manager' and facname = 'Basketball arena';


4. List the plan number, line number, resource name, number of resources (eventplanline.number), location name, time start, and time end where the event is held at the basketball arena, the event plan has activity of activity of “Operation”, and the event plan has a work date in the period October 1 to December 31, 2018.  Your query must not use the facility number (“F101”) of the basketball arena in the WHERE clause. Instead, you should use a condition on the FacName column for the value of “Basketball arena”.


select planno, lineno, resname, numberfld, locname, timestart, timeend from
EventPlanLine, ResoureTbl,Location where EventPlanLine.resno = ResoureTbl.resno and
EventPlanLine.locno = Location.locno and facno in (select facno from Facility where facname = 'Basketball arena')and
planno in (select planno from EventPlan where activity = 'Operation'and workdate between '2018-10-01' and '2018-12-31' );

5. List the event number, date held, customer number, customer name, facility number, and facility name of 2018 events placed by Boulder customers.


select eventno, dateheld, Customer.custno, custname, Facility.facno,facname from
EventRequest,Customer,Facility where (EventRequest.custno = Customer.custno) and
(EventRequest.facno = Facility.facno) and (dateheld between '2018-01-01' and '2018-12-31')
and city = 'Boulder';


6. List the customer number, customer name, event number, date held, facility number, facility name, and estimated audience cost per person (EstCost / EstAudience) for events held on 2018, in which the estimated cost per person is less than $0.2


select Customer.custno, custname, eventno, datehelp, Facility.facno,
facname, estcost/estaudience from EventRequest, Customer, Facility where
EventRequest.custno = Customer.custno and EventRequest.facno = Facility.facno and
datehelp between '2018-01-01' and '2018-12-31' and (estcost/estaudience < 0.2);


7. List the customer number, customer name, and total estimated costs for Approved events. The total amount of events is the sum of the estimated cost for each event. Group the results by customer number and customer name.


select Customer.custno, custname, sum(estcost) as 'Total est cost' from
EventRequest natural join Customer where status = 'Approved' 
group by Customer.custno, custname;


8. Insert yourself as a new row in the Customer table.


insert into Customer values('C200', 'liam' , 'channai', 'Y', 'louis' , 7079070 , 'Hyderabad' , 'TS' , '500045');


9. Increase the rate by 10 percent of nurse resource in the resource table.


update ResourceTbl set rate = 1.1*rate where resname = 'nurse'; 


10. Delete the new row added to the Customer table.


delete from Customer where custno = 'C200';
